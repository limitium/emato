plugins {
    id 'java'
    id 'jacoco'
    id 'org.springframework.boot' version '3.1.0'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'com.google.cloud.tools.jib' version '3.3.1'
    id 'com.diffplug.spotless' version '6.17.0'
}

group = 'com.example'
version = '1.0.0'
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot starters
    implementation 'org.springframework.boot:spring-boot-starter-web'
//    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    // Oracle JDBC
//    implementation 'com.oracle.database.jdbc:ojdbc8:19.3.0.0'
    // JSON processing
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    // Rest Template
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-json'
    // JCSMP (Solace)
//    implementation 'com.solacesystems:sol-jcsmp:10.13.0'
    implementation 'com.sun.mail:jakarta.mail:2.0.1'

    // Microsoft Outlook MSG file parser
    implementation 'org.apache.poi:poi:5.2.3'
    implementation 'org.apache.poi:poi-scratchpad:5.2.3'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

spotless {
    java {
        googleJavaFormat()
    }
}

tasks.withType(Test) {
    useJUnitPlatform()
}

jib {
    from {
        image = 'eclipse-temurin:17-jdk'
        platforms {
            platform {
                architecture = 'amd64'
                os = 'linux'
            }
            platform {
                architecture = 'arm64'
                os = 'linux'
            }
        }
    }
    to {
        image = 'limitium/normis:u'
    }
    container {
        ports = ['8080']
        environment = [
                'JAVA_OPTS': '-Xms512m -Xmx512m'
        ]
    }
    // Specify the target platform
    extraDirectories {
        paths = ['src/main/resources']
    }
}
